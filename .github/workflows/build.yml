name: Build

on: [push, pull_request]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install FSharp.Core
        run: nuget install FSharp.Core -Version 4.3.1
      - name: Setup Nuget.exe
        uses: nuget/setup-nuget@v1
      - name: Restore packages
        run: nuget restore ysoserial.sln
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.1
        with:
          vs-version: '16.0'
      - name: Build with MSBuild
        run: |
          $vsPath = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
          & "$vsPath\MSBuild\Current\Bin\MSBuild.exe" ysoserial.sln -p:Configuration=Release
              
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1
      - name: Build with MSBuild
        run: msbuild ysoserial.sln -p:Configuration=Release
      - name: Prepare build artifact for stashing
        run: |
          mkdir release
          move D:\a\ysoserial.net\ysoserial.net\ysoserial\bin\Release .\release
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ysoserial-${{ github.sha }}
          path: .\release
  # build-macos:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup .NET Core
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: 3.1.101
  #     - name: Build and publish
  #       run: dotnet publish ysoserial.sln -c Release -r osx-x64 --self-contained false
  #     - name: Zip the publish folder
  #       run: zip -r ysoserial-macos.zip ./ysoserial/bin/Release/netcoreapp3.1/osx-x64/publish
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ysoserial-macos-${{ github.sha }}
  #         path: ysoserial-macos.zip
